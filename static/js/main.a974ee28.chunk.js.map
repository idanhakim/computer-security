{"version":3,"sources":["store/index.js","components/Header/index.jsx","pages/Home/index.jsx","utils/validationSchemas.js","components/SubmitButton/index.jsx","api/index.js","pages/Login/index.jsx","pages/ForgotPassword/index.jsx","pages/Register/index.jsx","pages/MyAccount/ChangePassword/index.jsx","pages/MyAccount/AddClient/index.jsx","pages/MyAccount/index.jsx","pages/ResetPassword/VerifyTokenForm/index.jsx","pages/ResetPassword/index.jsx","App.js","index.js"],"names":["authContext","createContext","fakeAuth","isAuthenticated","signin","cb","setTimeout","signout","ProvideAuth","children","auth","useState","user","setUser","userName","useProvideAuth","Provider","value","useAuth","useContext","Header","history","useHistory","isLoggedIn","console","log","className","onClick","push","to","Home","REQUIRED_FIELD_VALIDATION_MSG","tokenSchema","Yup","required","emailSchema","email","userNameSchema","passwordSchema","newPasswordSchema","oneOf","min","nameSchema","matches","BootstrapButton","styled","Button","backgroundColor","borderColor","color","fontWeight","textTransform","boxShadow","SubmitButton","disabled","text","variant","size","type","BASE_URL","apiReq","params","route","a","method","axios","url","data","res","alert","message","loginAPI","password","username","Success","errorMsg","Fail","registerAPI","forgotPasswordAPI","changePasswordAPI","newPassword","new_password","addClientAPI","firstName","lastName","first_name","last_name","msg","verifyResetPasswordTokenAPI","token","verify","resetPasswordAPI","Login","from","useLocation","state","pathname","handleSubmit","values","setSubmitting","replace","JSON","stringify","initialValues","validationSchema","onSubmit","errors","touched","handleChange","handleBlur","isSubmitting","name","onChange","onBlur","placeholder","ForgotPassword","Register","ChangePassword","AddClient","MyAccount","useRouteMatch","path","VerifyTokenForm","onSuccess","ResetPassword","isVerify","setIsVerify","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wZAEMA,EAAcC,0BAEdC,EAAW,CACbC,iBAAiB,EACjBC,OAFa,SAENC,GACHH,EAASC,iBAAkB,EAC3BG,WAAWD,EAAI,MAEnBE,QANa,SAMLF,GACJH,EAASC,iBAAkB,EAC3BG,WAAWD,EAAI,OA0BVG,EAAc,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACnBC,EAvBoB,WAC1B,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAcA,MAAO,CACHD,OACAR,OAdW,SAACU,EAAUT,GACtBQ,EAAQC,GACRT,KAaAE,QAVY,SAAAF,GACZ,OAAOH,EAASK,SAAQ,WACpBM,EAAQ,MACRR,SAYKU,GACb,OACI,cAACf,EAAYgB,SAAb,CAAsBC,MAAOP,EAA7B,SACKD,KAKAS,EAAU,WACnB,OAAOC,qBAAWnB,ICxCToB,EAAS,WAClB,IAAMV,EAAOQ,IACTG,EAAUC,cAERC,EAAab,EAAKE,KAExBY,QAAQC,IAAIf,GAMZ,OACI,mCACKa,GAAc,wBAAQG,UAAU,gBAAgBC,QANpC,WACjBjB,EAAKH,SAAQ,kBAAMG,EAAKH,SAAQ,kBAAMc,EAAQO,KAAK,YAKhC,oBACf,mDACA,8BACI,+BACI,6BACI,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAGAN,EACI,mCACI,6BACI,cAAC,IAAD,CAAMM,GAAG,cAAT,4BAIR,qCACI,6BACI,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,mBAAT,+BAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,kBAAT,8BAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,YAAT,oCC5CvBC,G,OAAO,WAChB,OACI,sBAAKJ,UAAW,OAAhB,UACI,sCACA,0CACA,+BACI,4CACA,6CACA,gDACA,6CACA,gD,+CCZHK,EAAgC,iBAQhCC,EAAcC,MACtBC,SAASH,GAEDI,EAAcF,MACtBG,MAT+B,yBAU/BF,SAASH,GAEDM,EAAiBJ,MACzBC,SAASH,GAEDO,EAAiBL,MAAaC,SACvCH,GAGSQ,EAAoBN,MAC5BO,MAAM,CAACP,IAAQ,YAAa,OAC5BQ,IApBkC,EAHI,6BAwBtCP,SAASH,GAEDW,EAAaT,MAAaU,QACnC,eACA,kCACFT,SAASH,G,GAEiBE,IA9BS,gB,gBCA/BW,EAAkBC,YAAOC,IAAPD,CAAe,CAEnCE,gBAAiB,UACjBC,YAAa,UACbC,MAAO,UACPC,WAAY,IACZC,cAAe,YACf,UAAW,CACPJ,gBAAiB,UACjBC,YAAa,UACbI,UAAW,QAEf,WAAY,CACRA,UAAW,OACXL,gBAAiB,UACjBC,YAAa,WAEjB,UAAW,CACPI,UAAW,qCAINC,EAAe,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,KACpC,OAAO,cAACX,EAAD,CAAiBY,QAAQ,YAAYC,KAAK,SAASC,KAAK,SACvCJ,SAAUA,EAD3B,SACsCC,K,kBC1B3CI,EAAW,yBAEXC,EAAM,uCAAG,WAAOC,EAAQC,GAAf,6BAAAC,EAAA,6DAAsBC,EAAtB,+BAA+B,OAA/B,SAGPxC,QAAQC,IAAI,YAAaoC,GAHlB,SAIWI,IAAM,CACpBD,SACAE,IAAKP,EAAWG,EAChBK,KAAMN,IAPH,cAIDO,EAJC,OASP5C,QAAQC,IAAI,SAAU2C,GATf,kBAUAA,GAVA,kCAYPC,MAAM,kBAAD,OAAmB,KAAEC,UAZnB,0DAAH,wDAgBCC,EAAQ,uCAAG,WAAOzD,EAAU0D,GAAjB,qBAAAT,EAAA,6DACdF,EAAS,CACXY,SAAU3D,EACV0D,YAHgB,SAKFZ,EAAOC,EAAQ,UALb,cAKdO,EALc,yBAMXA,EAAID,KAAKO,QAAU,CAACvE,iBAAiB,GAAQ,CAACA,iBAAiB,EAAOwE,SAAQ,iBAAEP,QAAF,IAAEA,GAAF,UAAEA,EAAKD,YAAP,aAAE,EAAWS,YAAb,QAAqB,UANxF,2CAAH,wDASRC,EAAW,uCAAG,WAAOzC,EAAOoC,EAAU1D,GAAxB,qBAAAiD,EAAA,6DACjBF,EAAS,CACXY,SAAU3D,EACV0D,WACApC,SAJmB,SAMLwB,EAAOC,EAAQ,aANV,cAMjBO,EANiB,yBAOdA,EAAID,KAAKO,QAAU,CAACvE,iBAAiB,GAAQ,CAACA,iBAAiB,EAAOwE,SAAQ,iBAAEP,QAAF,IAAEA,GAAF,UAAEA,EAAKD,YAAP,aAAE,EAAWS,YAAb,QAAqB,UAPrF,2CAAH,0DAUXE,EAAiB,uCAAG,WAAOhE,GAAP,mBAAAiD,EAAA,sEACXH,EAAO,CAACa,SAAU3D,GAAW,gBADlB,cACvBsD,EADuB,yBAEpBA,EAAID,KAAKO,QAAU,CAACvE,iBAAiB,GAAQ,CAACA,iBAAiB,EAAOwE,SAAQ,iBAAEP,QAAF,IAAEA,GAAF,UAAEA,EAAKD,YAAP,aAAE,EAAWS,YAAb,QAAqB,UAF/E,2CAAH,sDAKjBG,EAAiB,uCAAG,WAAOP,EAAUQ,GAAjB,mBAAAjB,EAAA,sEACXH,EAAO,CAACY,WAAUS,aAAcD,GAAc,qBADnC,cACvBZ,EADuB,yBAEpBA,EAAID,KAAKO,QAAU,CAACvE,iBAAiB,GAAQ,CAACA,iBAAiB,EAAOwE,SAAQ,iBAAEP,QAAF,IAAEA,GAAF,UAAEA,EAAKD,YAAP,aAAE,EAAWS,YAAb,QAAqB,UAF/E,2CAAH,wDAKjBM,EAAY,uCAAG,WAAOC,EAAWC,EAAUhD,GAA5B,mBAAA2B,EAAA,sEACNH,EAAO,CAACxB,QAAOiD,WAAYF,EAAWG,UAAWH,GAAY,sBADvD,cAClBf,EADkB,yBAEfA,EAAID,KAAKO,QAAU,CAACvE,iBAAiB,EAAMoF,IAAKnB,EAAID,KAAKO,SAAW,CAACvE,iBAAiB,EAAOwE,SAAQ,iBAAEP,QAAF,IAAEA,GAAF,UAAEA,EAAKD,YAAP,aAAE,EAAWS,YAAb,QAAqB,UAF3G,2CAAH,0DAKZY,EAA2B,uCAAG,WAAOC,GAAP,mBAAA1B,EAAA,sEACrBH,EAAO,CAAC8B,OAAQD,GAAQ,WADH,cACjCrB,EADiC,yBAE9BA,EAAID,KAAKO,QAAU,CAACvE,iBAAiB,GAAQ,CAACA,iBAAiB,EAAOwE,SAAQ,iBAAEP,QAAF,IAAEA,GAAF,UAAEA,EAAKD,YAAP,aAAE,EAAWS,YAAb,QAAqB,UAFrE,2CAAH,sDAK3Be,EAAgB,uCAAG,WAAOnB,GAAP,mBAAAT,EAAA,sEACVH,EAAO,CAACqB,aAAcT,GAAW,4BADvB,cACtBJ,EADsB,yBAEnBA,EAAID,KAAKO,QAAU,CAACvE,iBAAiB,GAAQ,CAACA,iBAAiB,EAAOwE,SAAQ,iBAAEP,QAAF,IAAEA,GAAF,UAAEA,EAAKD,YAAP,aAAE,EAAWS,YAAb,QAAqB,UAFhF,2CAAH,sDChDhBgB,EAAQ,WACjB,IAAMlF,EAAOQ,IACTG,EAAUC,cAETuE,GADUC,cACOC,OAAS,CAACF,KAAM,CAACG,SAAU,iBAA5CH,KAECI,EAAY,uCAAG,WAAOC,EAAP,wBAAAnC,EAAA,6DAAgBoC,EAAhB,EAAgBA,cAAhB,SACyB5B,EAAS2B,EAAOpF,SAAUoF,EAAO1B,UAD1D,gBACVrE,EADU,EACVA,gBAAiBwE,EADP,EACOA,SACxBwB,GAAc,GACVhG,EACAO,EAAKN,OAAO8F,EAAOpF,UAAU,WACzBO,EAAQ+E,QAAQP,MAGpBxB,MAAMgC,KAAKC,UAAU3B,EAAU,KAAM,IARxB,2CAAH,wDAYlB,OACI,gCACI,uCACA,cAAC,IAAD,CACI4B,cAAe,CAACzF,SAAU,GAAI0D,SAAU,IACxCgC,iBAAkBvE,IAAW,CACzBnB,SAAUuB,EACVmC,SAAUlC,IAEdmE,SAAUR,EANd,SAQK,gBACKC,EADL,EACKA,OACAQ,EAFL,EAEKA,OACAC,EAHL,EAGKA,QACAC,EAJL,EAIKA,aACAC,EALL,EAKKA,WACAZ,EANL,EAMKA,aACAa,EAPL,EAOKA,aAPL,OAUG,uBAAML,SAAUR,EAAhB,UACI,sBAAKvE,UAAU,gBAAf,UACI,uBACIgC,KAAK,OACLqD,KAAK,WACLC,SAAUJ,EACVK,OAAQJ,EACR5F,MAAOiF,EAAOpF,SACdoG,YAAa,cAEhBR,EAAO5F,UAAY6F,EAAQ7F,UAAY4F,EAAO5F,YAGnD,sBAAKY,UAAU,gBAAf,UACI,uBACIgC,KAAK,WACLqD,KAAK,WACLC,SAAUJ,EACVK,OAAQJ,EACR5F,MAAOiF,EAAO1B,SACd0C,YAAa,aAEhBR,EAAOlC,UAAYmC,EAAQnC,UAAYkC,EAAOlC,YAGnD,cAAC,EAAD,CAAclB,SAAUwD,EAAcvD,KAAM,oBCjEvD4D,G,OAAiB,WAG1B,IAAI9F,EAAUC,cAER2E,EAAY,uCAAG,WAAOC,EAAP,wBAAAnC,EAAA,6DAAgBoC,EAAhB,EAAgBA,cAAhB,SACyBrB,EAAkBoB,EAAOpF,UADlD,gBACVX,EADU,EACVA,gBAAiBwE,EADP,EACOA,SACxBwB,GAAc,GACVhG,EACAkB,EAAQO,KAAK,oBAEbyC,MAAMgC,KAAKC,UAAU3B,EAAU,KAAM,IANxB,2CAAH,wDAUlB,OACI,gCACI,iDACA,cAAC,IAAD,CACI4B,cAAe,CAACzF,SAAU,IAC1B0F,iBAAkBvE,IAAW,CACzBnB,SAAUuB,IAEdoE,SAAUR,EALd,SAOK,gBACKC,EADL,EACKA,OACAQ,EAFL,EAEKA,OACAC,EAHL,EAGKA,QACAC,EAJL,EAIKA,aACAC,EALL,EAKKA,WACAZ,EANL,EAMKA,aACAa,EAPL,EAOKA,aAPL,OAUG,uBAAML,SAAUR,EAAhB,UACI,sBAAKvE,UAAU,gBAAf,UACI,uBACIgC,KAAK,OACLqD,KAAK,WACLC,SAAUJ,EACVK,OAAQJ,EACR5F,MAAOiF,EAAOpF,SACdoG,YAAa,cAEhBR,EAAO5F,UAAY6F,EAAQ7F,UAAY4F,EAAO5F,YAGnD,cAAC,EAAD,CAAcwC,SAAUwD,EAAcvD,KAAM,qBC/CvD6D,G,OAAW,WACpB,IAAM1G,EAAOQ,IACTG,EAAUC,cAETuE,GADUC,cACOC,OAAS,CAACF,KAAM,CAACG,SAAU,iBAA5CH,KAECI,EAAY,uCAAG,WAAOC,EAAP,wBAAAnC,EAAA,6DAAgBoC,EAAhB,EAAgBA,cAAhB,SACyBtB,EAAYqB,EAAO9D,MAAM8D,EAAO1B,SAAU0B,EAAOpF,UAD1E,gBACVX,EADU,EACVA,gBAAiBwE,EADP,EACOA,SACxBwB,GAAc,GACVhG,EACAO,EAAKN,OAAO8F,EAAOpF,UAAU,WACzBO,EAAQ+E,QAAQP,MAGpBxB,MAAMgC,KAAKC,UAAU3B,EAAU,KAAM,IARxB,2CAAH,wDAYlB,OACI,gCACI,0CAEA,cAAC,IAAD,CACI4B,cAAe,CAACzF,SAAU,GAAIsB,MAAO,GAAIoC,SAAU,IACnDgC,iBAAkBvE,IAAW,CACzBnB,SAAUuB,EACVD,MAAOD,EACPqC,SAAUjC,IAEdkE,SAAUR,EAPd,SASK,gBACKC,EADL,EACKA,OACAQ,EAFL,EAEKA,OACAC,EAHL,EAGKA,QACAC,EAJL,EAIKA,aACAC,EALL,EAKKA,WACAZ,EANL,EAMKA,aACAa,EAPL,EAOKA,aAPL,OAUG,uBAAML,SAAUR,EAAhB,UACI,sBAAKvE,UAAU,gBAAf,UACI,uBACIgC,KAAK,OACLqD,KAAK,WACLC,SAAUJ,EACVK,OAAQJ,EACR5F,MAAOiF,EAAOpF,SACdoG,YAAa,cAEhBR,EAAO5F,UAAY6F,EAAQ7F,UAAY4F,EAAO5F,YAGnD,sBAAKY,UAAU,gBAAf,UACI,uBACIgC,KAAK,QACLqD,KAAK,QACLC,SAAUJ,EACVK,OAAQJ,EACR5F,MAAOiF,EAAO9D,MACd8E,YAAa,UAEhBR,EAAOtE,OAASuE,EAAQvE,OAASsE,EAAOtE,SAG7C,sBAAKV,UAAU,gBAAf,UACI,uBACIgC,KAAK,WACLqD,KAAK,WACLC,SAAUJ,EACVK,OAAQJ,EACR5F,MAAOiF,EAAO1B,SACd0C,YAAa,aAEhBR,EAAOlC,UAAYmC,EAAQnC,UAAYkC,EAAOlC,YAGnD,cAAC,EAAD,CAAclB,SAAUwD,EAAcvD,KAAM,wBCjFvD8D,G,OAAiB,WAC1B,IAAIhG,EAAUC,cAER2E,EAAY,uCAAG,WAAOC,EAAP,wBAAAnC,EAAA,6DAAgBoC,EAAhB,EAAgBA,cAAhB,SACyBpB,EAAkBmB,EAAO1B,SAAU0B,EAAOlB,aADnE,gBACV7E,EADU,EACVA,gBAAiBwE,EADP,EACOA,SACxBwB,GAAc,GACVhG,EACAkB,EAAQO,KAAK,eAEbyC,MAAMgC,KAAKC,UAAU3B,EAAU,KAAM,IANxB,2CAAH,wDAUlB,OAAO,gCACH,iDACA,cAAC,IAAD,CACI4B,cAAe,CAAC/B,SAAU,GAAIQ,YAAa,IAC3CwB,iBAAkBvE,IAAW,CACzBuC,SAAUlC,EACV0C,YAAa1C,IAEjBmE,SAAUR,EANd,SAQK,gBACKC,EADL,EACKA,OACAQ,EAFL,EAEKA,OACAC,EAHL,EAGKA,QACAC,EAJL,EAIKA,aACAC,EALL,EAKKA,WACAZ,EANL,EAMKA,aACAa,EAPL,EAOKA,aAPL,OAUG,uBAAML,SAAUR,EAAhB,UACI,sBAAKvE,UAAU,gBAAf,UACI,uBACIgC,KAAK,WACLqD,KAAK,WACLC,SAAUJ,EACVK,OAAQJ,EACR5F,MAAOiF,EAAO1B,SACd0C,YAAa,aAEhBR,EAAOlC,UAAYmC,EAAQnC,UAAYkC,EAAOlC,YAGnD,sBAAK9C,UAAU,gBAAf,UACI,uBACIgC,KAAK,WACLqD,KAAK,cACLC,SAAUJ,EACVK,OAAQJ,EACR5F,MAAOiF,EAAOlB,YACdkC,YAAa,iBAEhBR,EAAO1B,aAAe2B,EAAQ3B,aAAe0B,EAAO1B,eAGzD,cAAC,EAAD,CAAc1B,SAAUwD,EAAcvD,KAAM,sBC1DnD+D,EAAY,WACrB,IAAIjG,EAAUC,cAER2E,EAAY,uCAAG,WAAOC,EAAP,gCAAAnC,EAAA,6DAAgBoC,EAAhB,EAAgBA,cAC1BhB,EAA8Be,EAA9Bf,UAAWC,EAAmBc,EAAnBd,SAAUhD,EAAS8D,EAAT9D,MADX,SAE8B8C,EAAaC,EAAWC,EAAUhD,GAFhE,gBAEVjC,EAFU,EAEVA,gBAAiBwE,EAFP,EAEOA,SAAUY,EAFjB,EAEiBA,IAClCY,GAAc,GACVhG,GACAkE,MAAMgC,KAAKC,UAAUf,EAAK,KAAM,IAChClE,EAAQO,KAAK,eAEbyC,MAAMgC,KAAKC,UAAU3B,EAAU,KAAM,IARxB,4CAAH,wDAYlB,OAAO,gCACH,4CACA,cAAC,IAAD,CACI4B,cAAe,CAACpB,UAAW,GAAIC,SAAU,GAAIhD,MAAO,IACpDoE,iBAAkBvE,IAAW,CACzBkD,UAAWzC,EACX0C,SAAU1C,EACVN,MAAOD,IAEXsE,SAAUR,EAPd,SASK,gBACKC,EADL,EACKA,OACAQ,EAFL,EAEKA,OACAC,EAHL,EAGKA,QACAC,EAJL,EAIKA,aACAC,EALL,EAKKA,WACAZ,EANL,EAMKA,aACAa,EAPL,EAOKA,aAPL,OAUG,uBAAML,SAAUR,EAAhB,UACI,sBAAKvE,UAAU,gBAAf,UACI,uBACIgC,KAAK,OACLqD,KAAK,YACLC,SAAUJ,EACVK,OAAQJ,EACR5F,MAAOiF,EAAOf,UACd+B,YAAa,eAEhBR,EAAOvB,WAAawB,EAAQxB,WAAauB,EAAOvB,aAGrD,sBAAKzD,UAAU,gBAAf,UACI,uBACIgC,KAAK,OACLqD,KAAK,WACLC,SAAUJ,EACVK,OAAQJ,EACR5F,MAAOiF,EAAOd,SACd8B,YAAa,cAEhBR,EAAOtB,UAAYuB,EAAQvB,UAAYsB,EAAOtB,YAGnD,sBAAK1D,UAAU,gBAAf,UACI,uBACIgC,KAAK,QACLqD,KAAK,QACLC,SAAUJ,EACVK,OAAQJ,EACR5F,MAAOiF,EAAO9D,MACd8E,YAAa,UAEhBR,EAAOtE,OAASuE,EAAQvE,OAASsE,EAAOtE,SAG7C,cAAC,EAAD,CAAckB,SAAUwD,EAAcvD,KAAM,kBCvEnDgE,EAAY,WACrB,MAAkBC,cAAbC,EAAL,EAAKA,KAAMvD,EAAX,EAAWA,IAIX,OAHWhD,IACaN,KAIhB,gCACI,4CACA,qBAAIc,UAAW,kBAAf,UACI,6BACI,cAAC,IAAD,CAAMG,GAAE,UAAKqC,EAAL,oBAAR,+BAEJ,6BACI,cAAC,IAAD,CAAMrC,GAAE,UAAKqC,EAAL,eAAR,6BAIR,eAAC,IAAD,WACI,cAAC,IAAD,CAAOuD,KAAI,UAAKA,EAAL,mBAAX,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,cAAX,SACI,cAAC,EAAD,YAMZ,cAAC,IAAD,CACI5F,GAAI,CACAmE,SAAU,aClCjB0B,EAAkB,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UACvB1B,EAAY,uCAAG,WAAOC,EAAP,wBAAAnC,EAAA,6DAAgBoC,EAAhB,EAAgBA,cAAhB,SACyBX,EAA4BU,EAAOT,OAD5D,gBACVtF,EADU,EACVA,gBAAiBwE,EADP,EACOA,SACxBwB,GAAc,GACVhG,EACAwH,IAEAtD,MAAMgC,KAAKC,UAAU3B,EAAU,KAAM,IANxB,2CAAH,wDAUlB,OACI,gCACI,4DACA,cAAC,IAAD,CACI4B,cAAe,CAACd,MAAO,IACvBe,iBAAkBvE,IAAW,CACzBwD,MAAOzD,IAEXyE,SAAUR,EALd,SAOK,gBACKC,EADL,EACKA,OACAQ,EAFL,EAEKA,OACAC,EAHL,EAGKA,QACAC,EAJL,EAIKA,aACAC,EALL,EAKKA,WACAZ,EANL,EAMKA,aACAa,EAPL,EAOKA,aAPL,OAUG,uBAAML,SAAUR,EAAhB,UACI,sBAAKvE,UAAU,gBAAf,UACI,uBACIgC,KAAK,OACLqD,KAAK,QACLC,SAAUJ,EACVK,OAAQJ,EACR5F,MAAOiF,EAAOT,MACdyB,YAAa,UAEhBR,EAAOjB,OAASkB,EAAQlB,OAASiB,EAAOjB,SAG7C,cAAC,EAAD,CAAcnC,SAAUwD,EAAcvD,KAAM,qBCtCvDqE,EAAgB,WACzB,IAAIvG,EAAUC,cACd,EAAgCX,oBAAS,GAAzC,mBAAOkH,EAAP,KAAiBC,EAAjB,KAEM7B,EAAY,uCAAG,WAAOC,EAAP,wBAAAnC,EAAA,6DAAgBoC,EAAhB,EAAgBA,cAAhB,SACyBR,EAAiBO,EAAO1B,UADjD,gBACVrE,EADU,EACVA,gBAAiBwE,EADP,EACOA,SACxBwB,GAAc,GACVhG,EACAkB,EAAQO,KAAK,UAEbyC,MAAMgC,KAAKC,UAAU3B,EAAU,KAAM,IANxB,2CAAH,wDAUlB,OAAO,gCACH,gDAEKkD,EAGG,cAAC,IAAD,CACItB,cAAe,CAAC/B,SAAU,IAC1BgC,iBAAkBvE,IAAW,CACzBuC,SAAUlC,IAEdmE,SAAUR,EALd,SAOK,gBACKC,EADL,EACKA,OACAQ,EAFL,EAEKA,OACAC,EAHL,EAGKA,QACAC,EAJL,EAIKA,aACAC,EALL,EAKKA,WACAZ,EANL,EAMKA,aACAa,EAPL,EAOKA,aAPL,OAUG,uBAAML,SAAUR,EAAhB,UACI,sBAAKvE,UAAU,gBAAf,UACI,uBACIgC,KAAK,WACLqD,KAAK,WACLC,SAAUJ,EACVK,OAAQJ,EACR5F,MAAOiF,EAAO1B,SACd0C,YAAa,aAEhBR,EAAOlC,UAAYmC,EAAQnC,UAAYkC,EAAOlC,YAGnD,cAAC,EAAD,CAAclB,SAAUwD,EAAcvD,KAAM,iBAhCxD,cAAC,EAAD,CAAiBoE,UAAW,kBAAMG,GAAY,UCgB/CC,MAhCf,WACI,OACI,cAAC,EAAD,UACI,eAAC,IAAD,WACI,cAAC,EAAD,IACA,+BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACP,KAAK,IAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,mBAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,mBAAZ,SACI,cAAC,EAAD,iBCjC5BQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a974ee28.chunk.js","sourcesContent":["import React, {useContext, createContext, useState} from \"react\";\r\n\r\nconst authContext = createContext();\r\n\r\nconst fakeAuth = {\r\n    isAuthenticated: false,\r\n    signin(cb) {\r\n        fakeAuth.isAuthenticated = true;\r\n        setTimeout(cb, 100); // fake async\r\n    },\r\n    signout(cb) {\r\n        fakeAuth.isAuthenticated = false;\r\n        setTimeout(cb, 100);\r\n    }\r\n};\r\n\r\nexport const useProvideAuth = () => {\r\n    const [user, setUser] = useState(null);\r\n\r\n    const signin = (userName, cb) => {\r\n        setUser(userName);\r\n        cb();\r\n    };\r\n\r\n    const signout = cb => {\r\n        return fakeAuth.signout(() => {\r\n            setUser(null);\r\n            cb();\r\n        });\r\n    };\r\n\r\n    return {\r\n        user,\r\n        signin,\r\n        signout\r\n    };\r\n}\r\n\r\nexport const ProvideAuth = ({children}) => {\r\n    const auth = useProvideAuth();\r\n    return (\r\n        <authContext.Provider value={auth}>\r\n            {children}\r\n        </authContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useAuth = () => {\r\n    return useContext(authContext);\r\n}","import React from 'react';\r\nimport './styles.css';\r\nimport {\r\n    Link, useHistory,\r\n} from \"react-router-dom\";\r\nimport {useAuth} from \"../../store\";\r\n\r\n\r\nexport const Header = () => {\r\n    const auth = useAuth();\r\n    let history = useHistory();\r\n\r\n    const isLoggedIn = auth.user\r\n\r\n    console.log(auth)\r\n\r\n    const handleLogOut = () => {\r\n        auth.signout(() => auth.signout(() => history.push(\"/\")));\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            {isLoggedIn && <button className='logout-button' onClick={handleLogOut}>Logout</button>}\r\n            <h1>computer-security</h1>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/\">Home</Link>\r\n                    </li>\r\n                    {\r\n                        isLoggedIn ?\r\n                            <>\r\n                                <li>\r\n                                    <Link to=\"/my-account\">My Account</Link>\r\n                                </li>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <li>\r\n                                    <Link to=\"/login\">Login</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/forgot-password\">Forgot Password</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/reset-password\">Reset Password</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/register\">Register</Link>\r\n                                </li>\r\n                            </>\r\n                    }\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n}","import React from 'react';\r\nimport './styles.css';\r\n\r\n\r\nexport const Home = ()=>{\r\n    return (\r\n        <div className={'home'}>\r\n            <h2>Home</h2>\r\n            <h3>Authors:</h3>\r\n            <ul>\r\n                <li>Idan Hakim</li>\r\n                <li>Oleg Rudoy.</li>\r\n                <li>Yafit Fridman.</li>\r\n                <li>Dor Nakash.</li>\r\n                <li>Tomer.</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}","import * as Yup from 'yup';\n\nexport const REQUIRED_FIELD_VALIDATION_MSG = 'Required Field';\nexport const NEW_PASSWORD_VALIDATION_MSG = 'Use 10 or more characters';\nexport const NUMBER_VALIDATION_MSG = 'Only numbers';\nexport const EMAIL_VALIDATION_MSG = 'Invalid email address';\n    export const MIN_LENGTH_PASSWORD = 0;\nexport const MINIMUM_PHONE_NUMBER = 5;\nexport const MINIMUM_FIVE_VALIDATION_TEXT = 'Please enter at least 5 digits';\n\nexport const tokenSchema = Yup.string()\n    .required(REQUIRED_FIELD_VALIDATION_MSG);\n\nexport const emailSchema = Yup.string()\n    .email(EMAIL_VALIDATION_MSG)\n    .required(REQUIRED_FIELD_VALIDATION_MSG);\n\nexport const userNameSchema = Yup.string()\n    .required(REQUIRED_FIELD_VALIDATION_MSG);\n\nexport const passwordSchema = Yup.string().required(\n    REQUIRED_FIELD_VALIDATION_MSG\n);\n\nexport const newPasswordSchema = Yup.string()\n    .oneOf([Yup.ref('password'), null])\n    .min(MIN_LENGTH_PASSWORD, NEW_PASSWORD_VALIDATION_MSG)\n    .required(REQUIRED_FIELD_VALIDATION_MSG);\n\nexport const nameSchema = Yup.string().matches(\n    /^[aA-zZ\\s]+$/,\n    'Name must only contain letters'\n).required(REQUIRED_FIELD_VALIDATION_MSG);\n\nexport const numberSchema = Yup.number(NUMBER_VALIDATION_MSG);\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst BootstrapButton = styled(Button)({\r\n\r\n    backgroundColor: '#282c34',\r\n    borderColor: '#282c34',\r\n    color: '#61dafb',\r\n    fontWeight: 700,\r\n    textTransform: 'uppercase',\r\n    '&:hover': {\r\n        backgroundColor: '#282c34',\r\n        borderColor: '#282c34',\r\n        boxShadow: 'none',\r\n    },\r\n    '&:active': {\r\n        boxShadow: 'none',\r\n        backgroundColor: '#282c34',\r\n        borderColor: '#282c34',\r\n    },\r\n    '&:focus': {\r\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\r\n    },\r\n});\r\n\r\nexport const SubmitButton = ({disabled, text}) => {\r\n    return <BootstrapButton variant=\"contained\" size=\"medium\" type=\"submit\"\r\n                            disabled={disabled}>{text}</BootstrapButton>\r\n\r\n}","import axios from \"axios\";\r\n\r\nconst BASE_URL = \"http://127.0.0.1:8000/\";\r\n\r\nconst apiReq = async (params, route, method = 'post') => {\r\n\r\n    try {\r\n        console.log('params = ', params)\r\n        const res = await axios({\r\n            method,\r\n            url: BASE_URL + route,\r\n            data: params\r\n        })\r\n        console.log('res = ', res)\r\n        return res;\r\n    } catch (e) {\r\n        alert(`NETWORK ERROR: ${e.message}`)\r\n    }\r\n}\r\n\r\nexport const loginAPI = async (userName, password) => {\r\n    const params = {\r\n        username: userName,\r\n        password\r\n    }\r\n    const res = await apiReq(params, 'login/')\r\n    return !!res.data.Success ? {isAuthenticated: true} : {isAuthenticated: false, errorMsg: res?.data?.Fail ?? 'error'}\r\n}\r\n\r\nexport const registerAPI = async (email, password, userName) => {\r\n    const params = {\r\n        username: userName,\r\n        password,\r\n        email\r\n    }\r\n    const res = await apiReq(params, 'register/')\r\n    return !!res.data.Success ? {isAuthenticated: true} : {isAuthenticated: false, errorMsg: res?.data?.Fail ?? 'error'}\r\n}\r\n\r\nexport const forgotPasswordAPI = async (userName) => {\r\n    const res = await apiReq({username: userName}, 'forgot_pass/')\r\n    return !!res.data.Success ? {isAuthenticated: true} : {isAuthenticated: false, errorMsg: res?.data?.Fail ?? 'error'}\r\n}\r\n\r\nexport const changePasswordAPI = async (password, newPassword) => {\r\n    const res = await apiReq({password, new_password: newPassword}, 'menu/change_pass/')\r\n    return !!res.data.Success ? {isAuthenticated: true} : {isAuthenticated: false, errorMsg: res?.data?.Fail ?? 'error'}\r\n}\r\n\r\nexport const addClientAPI = async (firstName, lastName, email) => {\r\n    const res = await apiReq({email, first_name: firstName, last_name: firstName}, 'menu/add_customer/')\r\n    return !!res.data.Success ? {isAuthenticated: true, msg: res.data.Success} : {isAuthenticated: false, errorMsg: res?.data?.Fail ?? 'error'}\r\n}\r\n\r\nexport const verifyResetPasswordTokenAPI = async (token) => {\r\n    const res = await apiReq({verify: token}, 'verify/')\r\n    return !!res.data.Success ? {isAuthenticated: true} : {isAuthenticated: false, errorMsg: res?.data?.Fail ?? 'error'}\r\n}\r\n\r\nexport const resetPasswordAPI = async (password) => {\r\n    const res = await apiReq({new_password: password}, 'forgot_pass_change_pass/')\r\n    return !!res.data.Success ? {isAuthenticated: true} : {isAuthenticated: false, errorMsg: res?.data?.Fail ?? 'error'}\r\n}\r\n\r\n","import React, {useState} from 'react';\r\nimport './styles.css';\r\nimport {Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {emailSchema, passwordSchema, userNameSchema} from \"../../utils/validationSchemas\";\r\nimport {useAuth} from \"../../store\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport {SubmitButton} from \"../../components/SubmitButton\";\r\nimport {loginAPI} from \"../../api\";\r\n\r\n\r\nexport const Login = () => {\r\n    const auth = useAuth();\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    let {from} = location.state || {from: {pathname: \"/my-account\"}};\r\n\r\n    const handleSubmit = async (values, {setSubmitting}) => {\r\n        const {isAuthenticated, errorMsg} = await loginAPI(values.userName, values.password)\r\n        setSubmitting(false);\r\n        if (isAuthenticated) {\r\n            auth.signin(values.userName, () => {\r\n                history.replace(from);\r\n            });\r\n        } else {\r\n            alert(JSON.stringify(errorMsg, null, 2))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Login</h2>\r\n            <Formik\r\n                initialValues={{userName: '', password: ''}}\r\n                validationSchema={Yup.object({\r\n                    userName: userNameSchema,\r\n                    password: passwordSchema,\r\n                })}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                {({\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit,\r\n                      isSubmitting,\r\n                      /* and other goodies */\r\n                  }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"input-wrapper\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"userName\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.userName}\r\n                                placeholder={'user name'}\r\n                            />\r\n                            {errors.userName && touched.userName && errors.userName}\r\n                        </div>\r\n\r\n                        <div className=\"input-wrapper\">\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.password}\r\n                                placeholder={'password'}\r\n                            />\r\n                            {errors.password && touched.password && errors.password}\r\n                        </div>\r\n\r\n                        <SubmitButton disabled={isSubmitting} text={'login'}/>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport './styles.css';\r\nimport {Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {emailSchema, userNameSchema} from \"../../utils/validationSchemas\";\r\nimport {SubmitButton} from \"../../components/SubmitButton\";\r\nimport {forgotPasswordAPI} from \"../../api\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n\r\nexport const ForgotPassword = () => {\r\n\r\n\r\n    let history = useHistory();\r\n\r\n    const handleSubmit = async (values, {setSubmitting}) => {\r\n        const {isAuthenticated, errorMsg} = await forgotPasswordAPI(values.userName)\r\n        setSubmitting(false);\r\n        if (isAuthenticated) {\r\n            history.push('/reset-password/');\r\n        } else {\r\n            alert(JSON.stringify(errorMsg, null, 2))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Forgot Password</h2>\r\n            <Formik\r\n                initialValues={{userName: ''}}\r\n                validationSchema={Yup.object({\r\n                    userName: userNameSchema,\r\n                })}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                {({\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit,\r\n                      isSubmitting,\r\n                      /* and other goodies */\r\n                  }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"input-wrapper\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"userName\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.userName}\r\n                                placeholder={'user name'}\r\n                            />\r\n                            {errors.userName && touched.userName && errors.userName}\r\n                        </div>\r\n\r\n                        <SubmitButton disabled={isSubmitting} text={'Reset'}/>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './styles.css';\r\nimport {Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {emailSchema, newPasswordSchema, userNameSchema} from \"../../utils/validationSchemas\";\r\nimport {useAuth} from \"../../store\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport {SubmitButton} from \"../../components/SubmitButton\";\r\nimport {registerAPI} from \"../../api\";\r\n\r\n\r\nexport const Register = () => {\r\n    const auth = useAuth();\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    let {from} = location.state || {from: {pathname: \"/my-account\"}};\r\n\r\n    const handleSubmit = async (values, {setSubmitting}) => {\r\n        const {isAuthenticated, errorMsg} = await registerAPI(values.email,values.password, values.userName)\r\n        setSubmitting(false);\r\n        if (isAuthenticated) {\r\n            auth.signin(values.userName, () => {\r\n                history.replace(from);\r\n            });\r\n        } else {\r\n            alert(JSON.stringify(errorMsg, null, 2))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Register</h2>\r\n\r\n            <Formik\r\n                initialValues={{userName: \"\", email: '', password: ''}}\r\n                validationSchema={Yup.object({\r\n                    userName: userNameSchema,\r\n                    email: emailSchema,\r\n                    password: newPasswordSchema,\r\n                })}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                {({\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit,\r\n                      isSubmitting,\r\n                      /* and other goodies */\r\n                  }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"input-wrapper\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"userName\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.userName}\r\n                                placeholder={'user name'}\r\n                            />\r\n                            {errors.userName && touched.userName && errors.userName}\r\n                        </div>\r\n\r\n                        <div className=\"input-wrapper\">\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.email}\r\n                                placeholder={'email'}\r\n                            />\r\n                            {errors.email && touched.email && errors.email}\r\n                        </div>\r\n\r\n                        <div className=\"input-wrapper\">\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.password}\r\n                                placeholder={'password'}\r\n                            />\r\n                            {errors.password && touched.password && errors.password}\r\n                        </div>\r\n\r\n                        <SubmitButton disabled={isSubmitting} text={'Register'}/>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {newPasswordSchema, passwordSchema} from \"../../../utils/validationSchemas\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {SubmitButton} from \"../../../components/SubmitButton\";\r\nimport {changePasswordAPI} from \"../../../api\";\r\n\r\nexport const ChangePassword = () => {\r\n    let history = useHistory();\r\n\r\n    const handleSubmit = async (values, {setSubmitting}) => {\r\n        const {isAuthenticated, errorMsg} = await changePasswordAPI(values.password, values.newPassword)\r\n        setSubmitting(false);\r\n        if (isAuthenticated) {\r\n            history.push('/my-account');\r\n        } else {\r\n            alert(JSON.stringify(errorMsg, null, 2))\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <h3>Change Password</h3>\r\n        <Formik\r\n            initialValues={{password: '', newPassword: ''}}\r\n            validationSchema={Yup.object({\r\n                password: passwordSchema,\r\n                newPassword: passwordSchema,\r\n            })}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n                  /* and other goodies */\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"input-wrapper\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.password}\r\n                            placeholder={'password'}\r\n                        />\r\n                        {errors.password && touched.password && errors.password}\r\n                    </div>\r\n\r\n                    <div className=\"input-wrapper\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"newPassword\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.newPassword}\r\n                            placeholder={'new password'}\r\n                        />\r\n                        {errors.newPassword && touched.newPassword && errors.newPassword}\r\n                    </div>\r\n\r\n                    <SubmitButton disabled={isSubmitting} text={'Change'}/>\r\n\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n}","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport {emailSchema, nameSchema} from \"../../../utils/validationSchemas\";\r\nimport {Formik} from \"formik\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {SubmitButton} from \"../../../components/SubmitButton\";\r\nimport {addClientAPI} from \"../../../api\";\r\n\r\nexport const AddClient = () => {\r\n    let history = useHistory();\r\n\r\n    const handleSubmit = async (values, {setSubmitting}) => {\r\n        const {firstName, lastName, email} = values;\r\n        const {isAuthenticated, errorMsg, msg} = await addClientAPI(firstName, lastName, email)\r\n        setSubmitting(false);\r\n        if (isAuthenticated) {\r\n            alert(JSON.stringify(msg, null, 2))\r\n            history.push('my-account');\r\n        } else {\r\n            alert(JSON.stringify(errorMsg, null, 2))\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <h3>Add Client</h3>\r\n        <Formik\r\n            initialValues={{firstName: \"\", lastName: \"\", email: \"\",}}\r\n            validationSchema={Yup.object({\r\n                firstName: nameSchema,\r\n                lastName: nameSchema,\r\n                email: emailSchema,\r\n            })}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n                  /* and other goodies */\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"input-wrapper\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.firstName}\r\n                            placeholder={'first name'}\r\n                        />\r\n                        {errors.firstName && touched.firstName && errors.firstName}\r\n                    </div>\r\n\r\n                    <div className=\"input-wrapper\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.lastName}\r\n                            placeholder={'last name'}\r\n                        />\r\n                        {errors.lastName && touched.lastName && errors.lastName}\r\n                    </div>\r\n\r\n                    <div className=\"input-wrapper\">\r\n                        <input\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.email}\r\n                            placeholder={'email'}\r\n                        />\r\n                        {errors.email && touched.email && errors.email}\r\n                    </div>\r\n\r\n                    <SubmitButton disabled={isSubmitting} text={'Add'}/>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n}","import React from 'react';\r\nimport './styles.css';\r\nimport {useAuth} from \"../../store\";\r\nimport {\r\n    Link, Route, Switch, Redirect, useRouteMatch\r\n} from \"react-router-dom\";\r\nimport {ChangePassword} from \"./ChangePassword\";\r\nimport {AddClient} from \"./AddClient\";\r\n\r\n\r\nexport const MyAccount = () => {\r\n    let {path, url} = useRouteMatch();\r\n    let auth = useAuth();\r\n    const isLoggedIn = auth.user\r\n\r\n    return (\r\n        isLoggedIn ?\r\n            <div>\r\n                <h2>My Account</h2>\r\n                <ul className={'my-account-menu'}>\r\n                    <li>\r\n                        <Link to={`${url}/change-password`}>Change Password</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={`${url}/add-client`}>Add Client</Link>\r\n                    </li>\r\n                </ul>\r\n\r\n                <Switch>\r\n                    <Route path={`${path}change-password`}>\r\n                        <ChangePassword/>\r\n                    </Route>\r\n                    <Route path={`${path}add-client`}>\r\n                        <AddClient/>\r\n                    </Route>\r\n                </Switch>\r\n\r\n            </div>\r\n            :\r\n            <Redirect\r\n                to={{\r\n                    pathname: \"/login\",\r\n                }}\r\n            />\r\n    );\r\n}","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport {tokenSchema} from \"../../../utils/validationSchemas\";\r\nimport {SubmitButton} from \"../../../components/SubmitButton\";\r\nimport {Formik} from \"formik\";\r\nimport {verifyResetPasswordTokenAPI} from \"../../../api\";\r\n\r\nexport const VerifyTokenForm = ({onSuccess}) => {\r\n    const handleSubmit = async (values, {setSubmitting}) => {\r\n        const {isAuthenticated, errorMsg} = await verifyResetPasswordTokenAPI(values.token);\r\n        setSubmitting(false);\r\n        if (isAuthenticated) {\r\n            onSuccess();\r\n        } else {\r\n            alert(JSON.stringify(errorMsg, null, 2))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Please enter verify token:</h2>\r\n            <Formik\r\n                initialValues={{token: ''}}\r\n                validationSchema={Yup.object({\r\n                    token: tokenSchema,\r\n                })}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                {({\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit,\r\n                      isSubmitting,\r\n                      /* and other goodies */\r\n                  }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"input-wrapper\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"token\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.token}\r\n                                placeholder={'token'}\r\n                            />\r\n                            {errors.token && touched.token && errors.token}\r\n                        </div>\r\n\r\n                        <SubmitButton disabled={isSubmitting} text={'Verify'}/>\r\n\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n\r\n}","import React, {useState} from \"react\";\r\nimport {\r\n    useHistory,\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nimport {resetPasswordAPI} from \"../../api\";\r\nimport * as Yup from \"yup\";\r\nimport {passwordSchema} from \"../../utils/validationSchemas\";\r\nimport {SubmitButton} from \"../../components/SubmitButton\";\r\nimport {Formik} from \"formik\";\r\nimport {VerifyTokenForm} from \"./VerifyTokenForm\";\r\n\r\nexport const ResetPassword = () => {\r\n    let history = useHistory();\r\n    const [isVerify, setIsVerify] = useState(false);\r\n\r\n    const handleSubmit = async (values, {setSubmitting}) => {\r\n        const {isAuthenticated, errorMsg} = await resetPasswordAPI(values.password)\r\n        setSubmitting(false);\r\n        if (isAuthenticated) {\r\n            history.push('/login');\r\n        } else {\r\n            alert(JSON.stringify(errorMsg, null, 2))\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <h2>Reset password</h2>\r\n        {\r\n            !isVerify ?\r\n                <VerifyTokenForm onSuccess={() => setIsVerify(true)}/>\r\n                :\r\n                <Formik\r\n                    initialValues={{password: ''}}\r\n                    validationSchema={Yup.object({\r\n                        password: passwordSchema,\r\n                    })}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    {({\r\n                          values,\r\n                          errors,\r\n                          touched,\r\n                          handleChange,\r\n                          handleBlur,\r\n                          handleSubmit,\r\n                          isSubmitting,\r\n                          /* and other goodies */\r\n                      }) => (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"input-wrapper\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.password}\r\n                                    placeholder={'password'}\r\n                                />\r\n                                {errors.password && touched.password && errors.password}\r\n                            </div>\r\n\r\n                            <SubmitButton disabled={isSubmitting} text={'Change'}/>\r\n\r\n                        </form>\r\n                    )}\r\n                </Formik>\r\n        }\r\n\r\n\r\n    </div>\r\n}","import './App.css';\nimport {Header} from \"./components/Header\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport {Home} from \"./pages/Home\";\nimport {Login} from \"./pages/Login\";\nimport {ForgotPassword} from \"./pages/ForgotPassword\";\nimport {Register} from \"./pages/Register\";\nimport {ProvideAuth} from \"./store\";\nimport {MyAccount} from \"./pages/MyAccount\";\nimport {ResetPassword} from \"./pages/ResetPassword\";\n\nfunction App() {\n    return (\n        <ProvideAuth>\n            <Router>\n                <Header/>\n                <main>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Home/>\n                        </Route>\n                        <Route path=\"/login\">\n                            <Login/>\n                        </Route>\n                        <Route path=\"/forgot-password\">\n                            <ForgotPassword/>\n                        </Route>\n                        <Route path=\"/register\">\n                            <Register/>\n                        </Route>\n                        <Route path=\"/my-account/\">\n                            <MyAccount/>\n                        </Route>\n                        <Route path=\"/reset-password/\">\n                            <ResetPassword/>\n                        </Route>\n                    </Switch>\n                </main>\n            </Router>\n        </ProvideAuth>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}