{"version":3,"sources":["store/index.js","components/Header/index.jsx","pages/Home/index.jsx","utils/validationSchemas.js","components/SubmitButton/index.jsx","api/index.js","pages/Login/index.jsx","pages/ForgotPassword/index.jsx","pages/Register/index.jsx","pages/MyAccount/ChangePassword/index.jsx","pages/MyAccount/AddClient/index.jsx","pages/MyAccount/index.jsx","App.js","index.js"],"names":["authContext","createContext","fakeAuth","isAuthenticated","signin","cb","setTimeout","signout","ProvideAuth","children","auth","useState","user","setUser","useProvideAuth","Provider","value","useAuth","useContext","Header","history","useHistory","isLoggedIn","console","log","className","onClick","push","to","Home","REQUIRED_FIELD_VALIDATION_MSG","emailSchema","Yup","email","required","passwordSchema","newPasswordSchema","oneOf","min","nameSchema","matches","BootstrapButton","styled","Button","backgroundColor","borderColor","color","fontWeight","textTransform","boxShadow","SubmitButton","disabled","text","variant","size","type","loginAPI","password","a","registerAPI","name","forgotPasswordAPI","changePasswordAPI","addClientAPI","Login","from","useLocation","state","pathname","handleSubmit","values","setSubmitting","replace","initialValues","validationSchema","onSubmit","errors","touched","handleChange","handleBlur","isSubmitting","onChange","onBlur","placeholder","ForgotPassword","isReset","setIsReset","Register","ChangePassword","AddClient","MyAccount","useRouteMatch","path","url","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.940385b5.chunk.js","sourcesContent":["import React, {useContext, createContext, useState} from \"react\";\r\n\r\nconst authContext = createContext();\r\n\r\nconst fakeAuth = {\r\n    isAuthenticated: false,\r\n    signin(cb) {\r\n        fakeAuth.isAuthenticated = true;\r\n        setTimeout(cb, 100); // fake async\r\n    },\r\n    signout(cb) {\r\n        fakeAuth.isAuthenticated = false;\r\n        setTimeout(cb, 100);\r\n    }\r\n};\r\n\r\nexport const useProvideAuth = () => {\r\n    const [user, setUser] = useState(null);\r\n\r\n    const signin = cb => {\r\n        return fakeAuth.signin(() => {\r\n            setUser(\"user\");\r\n            cb();\r\n        });\r\n    };\r\n\r\n    const signout = cb => {\r\n        return fakeAuth.signout(() => {\r\n            setUser(null);\r\n            cb();\r\n        });\r\n    };\r\n\r\n    return {\r\n        user,\r\n        signin,\r\n        signout\r\n    };\r\n}\r\n\r\nexport const ProvideAuth = ({children}) => {\r\n    const auth = useProvideAuth();\r\n    return (\r\n        <authContext.Provider value={auth}>\r\n            {children}\r\n        </authContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useAuth = () => {\r\n    return useContext(authContext);\r\n}","import React from 'react';\r\nimport './styles.css';\r\nimport {\r\n    Link, useHistory,\r\n} from \"react-router-dom\";\r\nimport {useAuth} from \"../../store\";\r\n\r\n\r\nexport const Header = () => {\r\n    const auth = useAuth();\r\n    let history = useHistory();\r\n\r\n    const isLoggedIn = auth.user\r\n\r\n    console.log(auth)\r\n\r\n    const handleLogOut = () => {\r\n        auth.signout(() => auth.signout(() => history.push(\"/\")));\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            {isLoggedIn && <button className='logout-button' onClick={handleLogOut}>Logout</button>}\r\n            <h1>computer-security</h1>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/\">Home</Link>\r\n                    </li>\r\n                    {\r\n                        isLoggedIn ?\r\n                            <>\r\n                                <li>\r\n                                    <Link to=\"/my-account\">My Account</Link>\r\n                                </li>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <li>\r\n                                    <Link to=\"/login\">Login</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/forgot-password\">Forgot Password</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/register\">Register</Link>\r\n                                </li>\r\n                            </>\r\n                    }\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n}","import React from 'react';\r\nimport './styles.css';\r\n\r\n\r\nexport const Home = ()=>{\r\n    return (\r\n        <div className={'home'}>\r\n            <h2>Home</h2>\r\n            <h3>Authors:</h3>\r\n            <ul>\r\n                <li>Idan Hakim</li>\r\n                <li>Oleg Rudoy</li>\r\n                <li>Yafit Fridman</li>\r\n                <li>Dor Nakash</li>\r\n                <li>Tomer</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}","import * as Yup from 'yup';\n\nexport const REQUIRED_FIELD_VALIDATION_MSG = 'Required Field';\nexport const NEW_PASSWORD_VALIDATION_MSG = 'Use 6 or more characters';\nexport const NUMBER_VALIDATION_MSG = 'Only numbers';\nexport const EMAIL_VALIDATION_MSG = 'Invalid email address';\nexport const MIN_LENGTH_PASSWORD = 6;\nexport const MINIMUM_PHONE_NUMBER = 5;\nexport const MINIMUM_FIVE_VALIDATION_TEXT = 'Please enter at least 5 digits';\n\nexport const emailSchema = Yup.string()\n    .email(EMAIL_VALIDATION_MSG)\n    .required(REQUIRED_FIELD_VALIDATION_MSG);\n\nexport const passwordSchema = Yup.string().required(\n    REQUIRED_FIELD_VALIDATION_MSG\n);\n\nexport const newPasswordSchema = Yup.string()\n    .oneOf([Yup.ref('password'), null])\n    .min(MIN_LENGTH_PASSWORD, NEW_PASSWORD_VALIDATION_MSG)\n    .required(REQUIRED_FIELD_VALIDATION_MSG);\n\nexport const nameSchema = Yup.string().matches(\n    /^[aA-zZ\\s]+$/,\n    'Name must only contain letters'\n).required(REQUIRED_FIELD_VALIDATION_MSG);\n\nexport const numberSchema = Yup.number(NUMBER_VALIDATION_MSG);\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst BootstrapButton = styled(Button)({\r\n\r\n    backgroundColor: '#282c34',\r\n    borderColor: '#282c34',\r\n    color: '#61dafb',\r\n    fontWeight: 700,\r\n    textTransform: 'uppercase',\r\n    '&:hover': {\r\n        backgroundColor: '#282c34',\r\n        borderColor: '#282c34',\r\n        boxShadow: 'none',\r\n    },\r\n    '&:active': {\r\n        boxShadow: 'none',\r\n        backgroundColor: '#282c34',\r\n        borderColor: '#282c34',\r\n    },\r\n    '&:focus': {\r\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\r\n    },\r\n});\r\n\r\nexport const SubmitButton = ({disabled, text}) => {\r\n    return <BootstrapButton variant=\"contained\" size=\"medium\" type=\"submit\"\r\n                            disabled={disabled}>{text}</BootstrapButton>\r\n\r\n}","import axios from \"axios\";\r\n\r\nconst BASE_URL = \"\";\r\n\r\nconst apiReq = (method, params) => {\r\n    return axios({\r\n        method,\r\n        url: BASE_URL,\r\n        data: params\r\n    })\r\n}\r\n\r\nexport const loginAPI = async (email, password) => {\r\n    return true;\r\n}\r\n\r\nexport const registerAPI = async (email, password, name) => {\r\n    return true;\r\n}\r\n\r\nexport const forgotPasswordAPI = async (email) => {\r\n    return true;\r\n}\r\n\r\nexport const changePasswordAPI = async (password) => {\r\n    return true;\r\n}\r\n\r\nexport const addClientAPI = async () => {\r\n    return true;\r\n}","import React from 'react';\r\nimport './styles.css';\r\nimport {Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {emailSchema, passwordSchema} from \"../../utils/validationSchemas\";\r\nimport {useAuth} from \"../../store\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport {SubmitButton} from \"../../components/SubmitButton\";\r\nimport {loginAPI} from \"../../api\";\r\n\r\n\r\nexport const Login = () => {\r\n    const auth = useAuth();\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    let {from} = location.state || {from: {pathname: \"/my-account\"}};\r\n\r\n    const handleSubmit = async (values, {setSubmitting}) => {\r\n        const res = await loginAPI(values.email, values.password)\r\n\r\n        setSubmitting(false);\r\n        auth.signin(() => {\r\n            history.replace(from);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Login</h2>\r\n            <Formik\r\n                initialValues={{email: '', password: ''}}\r\n                validationSchema={Yup.object({\r\n                    email: emailSchema,\r\n                    password: passwordSchema,\r\n                })}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                {({\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit,\r\n                      isSubmitting,\r\n                      /* and other goodies */\r\n                  }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"input-wrapper\">\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.email}\r\n                                placeholder={'email'}\r\n                            />\r\n                            {errors.email && touched.email && errors.email}\r\n                        </div>\r\n\r\n                        <div className=\"input-wrapper\">\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.password}\r\n                                placeholder={'password'}\r\n                            />\r\n                            {errors.password && touched.password && errors.password}\r\n                        </div>\r\n\r\n                        <SubmitButton disabled={isSubmitting} text={'login'}/>\r\n\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport './styles.css';\r\nimport {Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {emailSchema} from \"../../utils/validationSchemas\";\r\nimport {SubmitButton} from \"../../components/SubmitButton\";\r\nimport {forgotPasswordAPI} from \"../../api\";\r\n\r\n\r\nexport const ForgotPassword = () => {\r\n    const [isReset, setIsReset] = useState(false);\r\n\r\n    const handleSubmit = async (values, {setSubmitting}) => {\r\n        const res = await forgotPasswordAPI(values.email)\r\n        setSubmitting(false);\r\n        setIsReset(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Forgot Password</h2>\r\n            {!isReset ?\r\n                <Formik\r\n                    initialValues={{email: ''}}\r\n                    validationSchema={Yup.object({\r\n                        email: emailSchema,\r\n                    })}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    {({\r\n                          values,\r\n                          errors,\r\n                          touched,\r\n                          handleChange,\r\n                          handleBlur,\r\n                          handleSubmit,\r\n                          isSubmitting,\r\n                          /* and other goodies */\r\n                      }) => (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"input-wrapper\">\r\n                                <input\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.email}\r\n                                    placeholder={'email'}\r\n                                />\r\n                                {errors.email && touched.email && errors.email}\r\n                            </div>\r\n\r\n                            <SubmitButton disabled={isSubmitting} text={'Reset'}/>\r\n                        </form>\r\n                    )}\r\n                </Formik>\r\n                :\r\n                <div>send reset password to your email!</div>\r\n            }\r\n\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './styles.css';\r\nimport {Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {emailSchema, nameSchema, newPasswordSchema} from \"../../utils/validationSchemas\";\r\nimport {useAuth} from \"../../store\";\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport {SubmitButton} from \"../../components/SubmitButton\";\r\nimport {registerAPI} from \"../../api\";\r\n\r\n\r\nexport const Register = () => {\r\n    const auth = useAuth();\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    let {from} = location.state || {from: {pathname: \"/my-account\"}};\r\n\r\n    const handleSubmit = async (values, {setSubmitting}) => {\r\n        const res = await registerAPI(values.email, values.password, values.name)\r\n        setSubmitting(false);\r\n        auth.signin(() => {\r\n            history.replace(from);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Register</h2>\r\n\r\n            <Formik\r\n                initialValues={{name: \"\", email: '', password: ''}}\r\n                validationSchema={Yup.object({\r\n                    name: nameSchema,\r\n                    email: emailSchema,\r\n                    password: newPasswordSchema,\r\n                })}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                {({\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit,\r\n                      isSubmitting,\r\n                      /* and other goodies */\r\n                  }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"input-wrapper\">\r\n                            <input\r\n                                type=\"name\"\r\n                                name=\"name\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.name}\r\n                                placeholder={'name'}\r\n                            />\r\n                            {errors.name && touched.name && errors.name}\r\n                        </div>\r\n\r\n                        <div className=\"input-wrapper\">\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.email}\r\n                                placeholder={'email'}\r\n                            />\r\n                            {errors.email && touched.email && errors.email}\r\n                        </div>\r\n\r\n                        <div className=\"input-wrapper\">\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.password}\r\n                                placeholder={'password'}\r\n                            />\r\n                            {errors.password && touched.password && errors.password}\r\n                        </div>\r\n\r\n                        <SubmitButton disabled={isSubmitting} text={'Register'}/>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {newPasswordSchema} from \"../../../utils/validationSchemas\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {SubmitButton} from \"../../../components/SubmitButton\";\r\nimport {changePasswordAPI} from \"../../../api\";\r\n\r\nexport const ChangePassword = () => {\r\n    let history = useHistory();\r\n\r\n    const handleSubmit = async (values, {setSubmitting}) => {\r\n        const res = await changePasswordAPI(values.password)\r\n        setSubmitting(false);\r\n        history.push('/my-account');\r\n    }\r\n\r\n    return <div>\r\n        <h3>Change Password</h3>\r\n        <Formik\r\n            initialValues={{password: ''}}\r\n            validationSchema={Yup.object({\r\n                password: newPasswordSchema,\r\n            })}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n                  /* and other goodies */\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"input-wrapper\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.password}\r\n                            placeholder={'password'}\r\n                        />\r\n                        {errors.password && touched.password && errors.password}\r\n                    </div>\r\n\r\n                    <SubmitButton disabled={isSubmitting} text={'Change'}/>\r\n\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n}","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport {nameSchema} from \"../../../utils/validationSchemas\";\r\nimport {Formik} from \"formik\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {SubmitButton} from \"../../../components/SubmitButton\";\r\nimport {addClientAPI} from \"../../../api\";\r\n\r\nexport const AddClient = () => {\r\n    let history = useHistory();\r\n\r\n    const handleSubmit = async (values, {setSubmitting}) => {\r\n        const res = await addClientAPI();\r\n        setSubmitting(false);\r\n        history.push('my-account');\r\n    }\r\n\r\n    return <div>\r\n        <h3>Add Client</h3>\r\n        <Formik\r\n            initialValues={{name: \"\"}}\r\n            validationSchema={Yup.object({\r\n                name: nameSchema,\r\n            })}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n                  /* and other goodies */\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"input-wrapper\">\r\n                        <input\r\n                            type=\"name\"\r\n                            name=\"name\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.name}\r\n                            placeholder={'name'}\r\n                        />\r\n                        {errors.name && touched.name && errors.name}\r\n                    </div>\r\n\r\n                    <SubmitButton disabled={isSubmitting} text={'Add'}/>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n}","import React from 'react';\r\nimport './styles.css';\r\nimport {useAuth} from \"../../store\";\r\nimport {\r\n    Link, Route, Switch, Redirect, useRouteMatch\r\n} from \"react-router-dom\";\r\nimport {ChangePassword} from \"./ChangePassword\";\r\nimport {AddClient} from \"./AddClient\";\r\n\r\n\r\nexport const MyAccount = () => {\r\n    let {path, url} = useRouteMatch();\r\n    let auth = useAuth();\r\n    const isLoggedIn = auth.user\r\n\r\n    return (\r\n        isLoggedIn ?\r\n            <div>\r\n                <h2>My Account</h2>\r\n                <ul className={'my-account-menu'}>\r\n                    <li>\r\n                        <Link to={`${url}/change-password`}>Change Password</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={`${url}/add-client`}>Add Client</Link>\r\n                    </li>\r\n                </ul>\r\n\r\n                <Switch>\r\n                    <Route path={`${path}change-password`}>\r\n                        <ChangePassword/>\r\n                    </Route>\r\n                    <Route path={`${path}add-client`}>\r\n                        <AddClient/>\r\n                    </Route>\r\n                </Switch>\r\n\r\n            </div>\r\n            :\r\n            <Redirect\r\n                to={{\r\n                    pathname: \"/login\",\r\n                }}\r\n            />\r\n    );\r\n}","import './App.css';\nimport {Header} from \"./components/Header\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport {Home} from \"./pages/Home\";\nimport {Login} from \"./pages/Login\";\nimport {ForgotPassword} from \"./pages/ForgotPassword\";\nimport {Register} from \"./pages/Register\";\nimport {ProvideAuth} from \"./store\";\nimport {MyAccount} from \"./pages/MyAccount\";\n\nfunction App() {\n    return (\n        <ProvideAuth>\n            <Router>\n                <Header/>\n                <main>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Home/>\n                        </Route>\n                        <Route path=\"/login\">\n                            <Login/>\n                        </Route>\n                        <Route path=\"/forgot-password\">\n                            <ForgotPassword/>\n                        </Route>\n                        <Route path=\"/register\">\n                            <Register/>\n                        </Route>\n                        <Route path=\"/my-account/\">\n                            <MyAccount/>\n                        </Route>\n                    </Switch>\n                </main>\n            </Router>\n        </ProvideAuth>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}